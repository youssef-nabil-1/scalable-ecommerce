events {}

http {
    upstream user_service {
        server user-service:5000;
    }

    upstream product_service {
        server product-service:5001;
    }

    upstream cart_service {
        server cart-service:5002;
    }

    upstream order_service {
        server order-service:5003;
    }

    server {
        listen 80;

        # ðŸ”’ Auth verification endpoint (internal only)
        location = /_auth {
            internal;
            proxy_pass http://user_service/auth/verify;
            proxy_set_header Host $host;
            proxy_set_header Authorization $http_authorization; # pass JWT!
            proxy_pass_request_body off;
            proxy_set_header Content-Length ""; 
            proxy_intercept_errors on;     # let us handle errors
        }

        # Publicly accessible auth routes (register/login/etc.)
        location /auth/ {
            proxy_pass http://user_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Macro-like block for protected services
        location /product/ {
            auth_request /_auth;
            auth_request_set $user_id $upstream_http_x_user_id;
            auth_request_set $user_email $upstream_http_x_user_email;

            proxy_pass http://product_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Forward user identity downstream
            proxy_set_header X-User-Id $user_id;
            proxy_set_header X-User-Email $user_email;
        }

        location /cart/ {
            auth_request /_auth;
            auth_request_set $user_id $upstream_http_x_user_id;
            auth_request_set $user_email $upstream_http_x_user_email;

            proxy_pass http://cart_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_set_header X-User-Id $user_id;
            proxy_set_header X-User-Email $user_email;
        }

        location /order/ {
            auth_request /_auth;
            auth_request_set $user_id $upstream_http_x_user_id;
            auth_request_set $user_email $upstream_http_x_user_email;

            proxy_pass http://order_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_set_header X-User-Id $user_id;
            proxy_set_header X-User-Email $user_email;
        }
    }
}
